{"version":3,"sources":["@core/components/breadcrumbs/index.js","assets/images/portrait/small/avatar-s-20.jpg","assets/images/portrait/small sync /^/.//avatar/-s/-.*$","assets/images/portrait/small/avatar-s-16.jpg","assets/images/portrait/small/avatar-s-17.jpg","assets/images/portrait/small/avatar-s-19.jpg","assets/images/portrait/small/avatar-s-21.jpg","assets/images/portrait/small/avatar-s-23.jpg","assets/images/portrait/small/avatar-s-24.jpg","pages/locations/locations-data.js","pages/locations/locations-table.js","pages/locations/index.js"],"names":["BreadCrumbs","props","breadCrumbTitle","breadCrumbParent","breadCrumbParent2","breadCrumbParent3","breadCrumbActive","className","tag","to","active","color","size","end","Link","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","data","axios","get","then","response","advSearchColumns","name","sortable","minWidth","selector","row","full_name","email","post","city","start_date","salary","LocationsTable","useState","Picker","setPicker","searchName","setSearchName","searchPost","setSearchPost","searchCity","setSearchCity","currentPage","setCurrentPage","searchEmail","setSearchEmail","searchSalary","setSearchSalary","filteredData","setFilteredData","dataToRender","length","lg","md","for","placeholder","value","onChange","target","updatedData","filter","item","startsWith","toLowerCase","includes","type","options","mode","dateFormat","date","range","arr","i","Date","year","getFullYear","month","getMonth","toString","day","getDate","push","getTime","handleDateFilter","noHeader","pagination","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","Math","ceil","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","nextLinkClassName","pageLinkClassName","breakLinkClassName","previousLinkClassName","nextClassName","previousClassName","containerClassName","Locations","sm","onClick","preventDefault","outline"],"mappings":"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","file":"static/js/16.2d3d35c7.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Breadcrumb,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  BreadcrumbItem,\r\n  DropdownToggle,\r\n  UncontrolledButtonDropdown\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-start mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-end col-md-3 col-12 d-md-block d-none'>\r\n        <div className='breadcrumb-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' end>\r\n              <DropdownItem tag={Link} to='/apps/todo'>\r\n                <CheckSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='me-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='me-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='me-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";","var map = {\n\t\"./avatar-s-1.jpg\": 38,\n\t\"./avatar-s-10.jpg\": 89,\n\t\"./avatar-s-11.jpg\": 63,\n\t\"./avatar-s-12.jpg\": 227,\n\t\"./avatar-s-13.jpg\": 127,\n\t\"./avatar-s-14.jpg\": 228,\n\t\"./avatar-s-15.jpg\": 224,\n\t\"./avatar-s-16.jpg\": 480,\n\t\"./avatar-s-17.jpg\": 481,\n\t\"./avatar-s-18.jpg\": 225,\n\t\"./avatar-s-19.jpg\": 482,\n\t\"./avatar-s-2.jpg\": 48,\n\t\"./avatar-s-20.jpg\": 468,\n\t\"./avatar-s-21.jpg\": 483,\n\t\"./avatar-s-22.jpg\": 226,\n\t\"./avatar-s-23.jpg\": 484,\n\t\"./avatar-s-24.jpg\": 485,\n\t\"./avatar-s-25.jpg\": 230,\n\t\"./avatar-s-26.jpg\": 229,\n\t\"./avatar-s-3.jpg\": 31,\n\t\"./avatar-s-4.jpg\": 64,\n\t\"./avatar-s-5.jpg\": 49,\n\t\"./avatar-s-6.jpg\": 88,\n\t\"./avatar-s-7.jpg\": 62,\n\t\"./avatar-s-8.jpg\": 47,\n\t\"./avatar-s-9.jpg\": 25\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 479;","export default __webpack_public_path__ + \"static/media/avatar-s-16.1850b51c.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-17.ac876056.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-19.f39063a2.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-21.d383013d.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-23.c1d416e5.jpg\";","export default __webpack_public_path__ + \"static/media/avatar-s-24.a649af23.jpg\";","// ** Custom Components\nimport Avatar from \"@components/avatar\";\n\n// ** Third Party Components\nimport axios from \"axios\";\nimport { MoreVertical, Edit, FileText, Archive, Trash } from \"react-feather\";\n\n// ** Reactstrap Imports\nimport {\n  Badge,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n\n// ** Vars\nconst states = [\n  \"success\",\n  \"danger\",\n  \"warning\",\n  \"info\",\n  \"dark\",\n  \"primary\",\n  \"secondary\",\n];\n\nconst status = {\n  1: { title: \"Current\", color: \"light-primary\" },\n  2: { title: \"Professional\", color: \"light-success\" },\n  3: { title: \"Rejected\", color: \"light-danger\" },\n  4: { title: \"Resigned\", color: \"light-warning\" },\n  5: { title: \"Applied\", color: \"light-info\" },\n};\n\nexport let data;\n\n// ** Get initial Data\naxios.get(\"/api/datatables/initial-data\").then((response) => {\n  data = response.data;\n});\n\n// ** Table Zero Config Column\nexport const basicColumns = [\n  {\n    name: \"ID\",\n    sortable: true,\n    maxWidth: \"100px\",\n    selector: (row) => row.id,\n  },\n  {\n    name: \"Name\",\n    sortable: true,\n    minWidth: \"225px\",\n    selector: (row) => row.full_name,\n  },\n  {\n    name: \"Email\",\n    sortable: true,\n    minWidth: \"310px\",\n    selector: (row) => row.email,\n  },\n  {\n    name: \"Position\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.post,\n  },\n  {\n    name: \"Age\",\n    sortable: true,\n    minWidth: \"100px\",\n    selector: (row) => row.age,\n  },\n  {\n    name: \"Salary\",\n    sortable: true,\n    minWidth: \"175px\",\n    selector: (row) => row.salary,\n  },\n];\n// ** Table ReOrder Column\nexport const reOrderColumns = [\n  {\n    name: \"ID\",\n    reorder: true,\n    sortable: true,\n    maxWidth: \"100px\",\n    selector: (row) => row.id,\n  },\n  {\n    name: \"Name\",\n    reorder: true,\n    sortable: true,\n    minWidth: \"225px\",\n    selector: (row) => row.full_name,\n  },\n  {\n    name: \"Email\",\n    reorder: true,\n    sortable: true,\n    minWidth: \"310px\",\n    selector: (row) => row.email,\n  },\n  {\n    name: \"Position\",\n    reorder: true,\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.post,\n  },\n  {\n    name: \"Age\",\n    reorder: true,\n    sortable: true,\n    minWidth: \"100px\",\n    selector: (row) => row.age,\n  },\n  {\n    name: \"Salary\",\n    reorder: true,\n    sortable: true,\n    minWidth: \"175px\",\n    selector: (row) => row.salary,\n  },\n];\n\n// ** Expandable table component\nconst ExpandableTable = ({ data }) => {\n  return (\n    <div className=\"expandable-content p-2\">\n      <p>\n        <span className=\"fw-bold\">City:</span> {data.city}\n      </p>\n      <p>\n        <span className=\"fw-bold\">Experience:</span> {data.experience}\n      </p>\n      <p className=\"m-0\">\n        <span className=\"fw-bold\">Post:</span> {data.post}\n      </p>\n    </div>\n  );\n};\n\n// ** Table Common Column\nexport const columns = [\n  {\n    name: \"Name\",\n    minWidth: \"250px\",\n    sortable: (row) => row.full_name,\n    cell: (row) => (\n      <div className=\"d-flex align-items-center\">\n        {row.avatar === \"\" ? (\n          <Avatar\n            color={`light-${states[row.status]}`}\n            content={row.full_name}\n            initials\n          />\n        ) : (\n          <Avatar\n            img={\n              require(`@src/assets/images/portrait/small/avatar-s-${row.avatar}`)\n                .default\n            }\n          />\n        )}\n        <div className=\"user-info text-truncate ms-1\">\n          <span className=\"d-block fw-bold text-truncate\">{row.full_name}</span>\n          <small>{row.post}</small>\n        </div>\n      </div>\n    ),\n  },\n  {\n    name: \"Email\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.email,\n  },\n  {\n    name: \"Date\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.start_date,\n  },\n\n  {\n    name: \"Salary\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.salary,\n  },\n  {\n    name: \"Age\",\n    sortable: true,\n    minWidth: \"100px\",\n    selector: (row) => row.age,\n  },\n  {\n    name: \"Status\",\n    minWidth: \"150px\",\n    sortable: (row) => row.status.title,\n    cell: (row) => {\n      return (\n        <Badge color={status[row.status].color} pill>\n          {status[row.status].title}\n        </Badge>\n      );\n    },\n  },\n  {\n    name: \"Actions\",\n    allowOverflow: true,\n    cell: () => {\n      return (\n        <div className=\"d-flex\">\n          <UncontrolledDropdown>\n            <DropdownToggle className=\"pe-1\" tag=\"span\">\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem\n                tag=\"a\"\n                href=\"/\"\n                className=\"w-100\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <FileText size={15} />\n                <span className=\"align-middle ms-50\">Details</span>\n              </DropdownItem>\n              <DropdownItem\n                tag=\"a\"\n                href=\"/\"\n                className=\"w-100\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <Archive size={15} />\n                <span className=\"align-middle ms-50\">Archive</span>\n              </DropdownItem>\n              <DropdownItem\n                tag=\"a\"\n                href=\"/\"\n                className=\"w-100\"\n                onClick={(e) => e.preventDefault()}\n              >\n                <Trash size={15} />\n                <span className=\"align-middle ms-50\">Delete</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <Edit size={15} />\n        </div>\n      );\n    },\n  },\n];\n\n// ** Table Intl Column\nexport const multiLingColumns = [\n  {\n    name: \"Name\",\n    sortable: true,\n    minWidth: \"200px\",\n    selector: (row) => row.full_name,\n  },\n  {\n    name: \"Position\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.post,\n  },\n  {\n    name: \"Email\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.email,\n  },\n  {\n    name: \"Date\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.start_date,\n  },\n\n  {\n    name: \"Salary\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.salary,\n  },\n  {\n    name: \"Status\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.status,\n    cell: (row) => {\n      return (\n        <Badge color={status[row.status].color} pill>\n          {status[row.status].title}\n        </Badge>\n      );\n    },\n  },\n  {\n    name: \"Actions\",\n    allowOverflow: true,\n    cell: () => {\n      return (\n        <div className=\"d-flex\">\n          <UncontrolledDropdown>\n            <DropdownToggle className=\"pe-1\" tag=\"span\">\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu end>\n              <DropdownItem>\n                <FileText size={15} />\n                <span className=\"align-middle ms-50\">Details</span>\n              </DropdownItem>\n              <DropdownItem>\n                <Archive size={15} />\n                <span className=\"align-middle ms-50\">Archive</span>\n              </DropdownItem>\n              <DropdownItem>\n                <Trash size={15} />\n                <span className=\"align-middle ms-50\">Delete</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <Edit size={15} />\n        </div>\n      );\n    },\n  },\n];\n\n// ** Table Server Side Column\nexport const serverSideColumns = [\n  {\n    sortable: true,\n    name: \"Full Name\",\n    minWidth: \"225px\",\n    selector: (row) => row.full_name,\n  },\n  {\n    sortable: true,\n    name: \"Email\",\n    minWidth: \"250px\",\n    selector: (row) => row.email,\n  },\n  {\n    sortable: true,\n    name: \"Position\",\n    minWidth: \"250px\",\n    selector: (row) => row.post,\n  },\n  {\n    sortable: true,\n    name: \"Office\",\n    minWidth: \"150px\",\n    selector: (row) => row.city,\n  },\n  {\n    sortable: true,\n    name: \"Start Date\",\n    minWidth: \"150px\",\n    selector: (row) => row.start_date,\n  },\n  {\n    sortable: true,\n    name: \"Salary\",\n    minWidth: \"150px\",\n    selector: (row) => row.salary,\n  },\n];\n\n// ** Table Adv Search Column\nexport const advSearchColumns = [\n  {\n    name: \"Name\",\n    sortable: true,\n    minWidth: \"200px\",\n    selector: (row) => row.full_name,\n  },\n  {\n    name: \"Email\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.email,\n  },\n  {\n    name: \"Post\",\n    sortable: true,\n    minWidth: \"250px\",\n    selector: (row) => row.post,\n  },\n  {\n    name: \"City\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.city,\n  },\n  {\n    name: \"Date\",\n    sortable: true,\n    minWidth: \"150px\",\n    selector: (row) => row.start_date,\n  },\n\n  {\n    name: \"Salary\",\n    sortable: true,\n    minWidth: \"100px\",\n    selector: (row) => row.salary,\n  },\n];\n\nexport default ExpandableTable;\n","// ** React Imports\nimport { useState, Fragment } from \"react\";\n\n// ** Table Columns\nimport { data, advSearchColumns } from \"./locations-data\";\n\n// ** Third Party Components\nimport Flatpickr from \"react-flatpickr\";\nimport ReactPaginate from \"react-paginate\";\nimport { ChevronDown } from \"react-feather\";\nimport DataTable from \"react-data-table-component\";\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Input,\n  Label,\n  Row,\n  Col,\n} from \"reactstrap\";\n\n// ** Styles\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\";\n\nconst LocationsTable = () => {\n  // ** States\n  const [Picker, setPicker] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [searchPost, setSearchPost] = useState(\"\");\n  const [searchCity, setSearchCity] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const [searchEmail, setSearchEmail] = useState(\"\");\n  const [searchSalary, setSearchSalary] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n\n  // ** Function to handle Pagination\n  const handlePagination = (page) => setCurrentPage(page.selected);\n\n  // ** Table data to render\n  const dataToRender = () => {\n    if (\n      searchName.length ||\n      searchPost.length ||\n      searchEmail.length ||\n      searchCity.length ||\n      searchSalary.length ||\n      Picker.length\n    ) {\n      return filteredData;\n    } else {\n      return data;\n    }\n  };\n\n  // ** Custom Pagination\n  const CustomPagination = () => (\n    <ReactPaginate\n      previousLabel={\"\"}\n      nextLabel={\"\"}\n      forcePage={currentPage}\n      onPageChange={(page) => handlePagination(page)}\n      pageCount={Math.ceil(dataToRender().length / 7) || 1}\n      breakLabel={\"...\"}\n      pageRangeDisplayed={2}\n      marginPagesDisplayed={2}\n      activeClassName=\"active\"\n      pageClassName=\"page-item\"\n      breakClassName=\"page-item\"\n      nextLinkClassName=\"page-link\"\n      pageLinkClassName=\"page-link\"\n      breakLinkClassName=\"page-link\"\n      previousLinkClassName=\"page-link\"\n      nextClassName=\"page-item next-item\"\n      previousClassName=\"page-item prev-item\"\n      containerClassName={\n        \"pagination react-paginate separated-pagination pagination-sm justify-content-end pe-1 mt-1\"\n      }\n    />\n  );\n\n  // ** Function to handle name filter\n  const handleNameFilter = (e) => {\n    const value = e.target.value;\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchEmail.length ||\n        searchPost.length ||\n        searchCity.length ||\n        searchSalary.length ||\n        Picker.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchName(value);\n    if (value.length) {\n      updatedData = dataToFilter().filter((item) => {\n        const startsWith = item.full_name\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n\n        const includes = item.full_name\n          .toLowerCase()\n          .includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchName(value);\n    }\n  };\n\n  // ** Function to handle email filter\n  const handleEmailFilter = (e) => {\n    const value = e.target.value;\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchName.length ||\n        searchPost.length ||\n        searchCity.length ||\n        searchSalary.length ||\n        Picker.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchEmail(value);\n    if (value.length) {\n      updatedData = dataToFilter().filter((item) => {\n        const startsWith = item.email\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n\n        const includes = item.email.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchEmail(value);\n    }\n  };\n\n  // ** Function to handle post filter\n  const handlePostFilter = (e) => {\n    const value = e.target.value;\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchEmail.length ||\n        searchName.length ||\n        searchCity.length ||\n        searchSalary.length ||\n        Picker.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchPost(value);\n    if (value.length) {\n      updatedData = dataToFilter().filter((item) => {\n        const startsWith = item.post\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n\n        const includes = item.post.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchPost(value);\n    }\n  };\n\n  // ** Function to handle city filter\n  const handleCityFilter = (e) => {\n    const value = e.target.value;\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchEmail.length ||\n        searchName.length ||\n        searchPost.length ||\n        searchSalary.length ||\n        Picker.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchCity(value);\n    if (value.length) {\n      updatedData = dataToFilter().filter((item) => {\n        const startsWith = item.city\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n\n        const includes = item.city.toLowerCase().includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchCity(value);\n    }\n  };\n\n  // ** Function to handle salary filter\n  const handleSalaryFilter = (e) => {\n    const value = e.target.value;\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchEmail.length ||\n        searchName.length ||\n        searchPost.length ||\n        searchCity.length ||\n        Picker.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    setSearchSalary(value);\n    if (value.length) {\n      updatedData = dataToFilter().filter((item) => {\n        const startsWith = item.salary\n          .toLowerCase()\n          .startsWith(value.toLowerCase());\n\n        const includes = item.salary\n          .toLowerCase()\n          .includes(value.toLowerCase());\n\n        if (startsWith) {\n          return startsWith;\n        } else if (!startsWith && includes) {\n          return includes;\n        } else return null;\n      });\n      setFilteredData([...updatedData]);\n      setSearchSalary(value);\n    }\n  };\n\n  // ** Function to handle date filter\n  const handleDateFilter = (range) => {\n    const arr = [];\n    let updatedData = [];\n    const dataToFilter = () => {\n      if (\n        searchEmail.length ||\n        searchName.length ||\n        searchPost.length ||\n        searchCity.length ||\n        searchSalary.length\n      ) {\n        return filteredData;\n      } else {\n        return data;\n      }\n    };\n\n    range.map((i) => {\n      const date = new Date(i);\n\n      const year = date.getFullYear();\n\n      let month = (1 + date.getMonth()).toString();\n      month = month.length > 1 ? month : `0${month}`;\n\n      let day = date.getDate().toString();\n      day = day.length > 1 ? day : `0${day}`;\n\n      arr.push(`${month}/${day}/${year}`);\n      return true;\n    });\n\n    setPicker(range);\n\n    if (range.length) {\n      updatedData = dataToFilter().filter((item) => {\n        return (\n          new Date(item.start_date).getTime() >= new Date(arr[0]).getTime() &&\n          new Date(item.start_date).getTime() <= new Date(arr[1]).getTime()\n        );\n      });\n      setFilteredData([...updatedData]);\n      setPicker(range);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader className=\"border-bottom\">\n          <CardTitle tag=\"h4\">Locations</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row className=\"mt-1 mb-50\">\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"name\">\n                Name:\n              </Label>\n              <Input\n                id=\"name\"\n                placeholder=\"Bruce Wayne\"\n                value={searchName}\n                onChange={handleNameFilter}\n              />\n            </Col>\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"email\">\n                Email:\n              </Label>\n              <Input\n                type=\"email\"\n                id=\"email\"\n                placeholder=\"Bwayne@email.com\"\n                value={searchEmail}\n                onChange={handleEmailFilter}\n              />\n            </Col>\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"post\">\n                Post:\n              </Label>\n              <Input\n                id=\"post\"\n                placeholder=\"Web Designer\"\n                value={searchPost}\n                onChange={handlePostFilter}\n              />\n            </Col>\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"city\">\n                City:\n              </Label>\n              <Input\n                id=\"city\"\n                placeholder=\"San Diego\"\n                value={searchCity}\n                onChange={handleCityFilter}\n              />\n            </Col>\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"date\">\n                Date:\n              </Label>\n              <Flatpickr\n                className=\"form-control\"\n                id=\"date\"\n                value={Picker}\n                options={{ mode: \"range\", dateFormat: \"m/d/Y\" }}\n                onChange={(date) => handleDateFilter(date)}\n              />\n            </Col>\n            <Col lg=\"4\" md=\"6\" className=\"mb-1\">\n              <Label className=\"form-label\" for=\"salary\">\n                Salary:\n              </Label>\n              <Input\n                id=\"salary\"\n                placeholder=\"10000\"\n                value={searchSalary}\n                onChange={handleSalaryFilter}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n        <div className=\"react-dataTable\">\n          <DataTable\n            noHeader\n            pagination\n            columns={advSearchColumns}\n            paginationPerPage={7}\n            className=\"react-dataTable\"\n            sortIcon={<ChevronDown size={10} />}\n            paginationDefaultPage={currentPage + 1}\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n          />\n        </div>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default LocationsTable;\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport LocationsTable from \"./locations-table\";\n\n// ** Custom Components\nimport Breadcrumbs from \"@components/breadcrumbs\";\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  Input,\n  Form,\n  Button,\n  Label,\n} from \"reactstrap\";\nimport Select from \"react-select\";\n\nconst Locations = () => {\n  return (\n    <Fragment>\n      <Breadcrumbs\n        breadCrumbTitle=\"Locations\"\n        breadCrumbParent=\"Location Mgnt\"\n        breadCrumbActive=\"Locations\"\n      />\n      <Card>\n        <CardHeader>\n          <CardTitle tag=\"h4\">Create Location</CardTitle>\n        </CardHeader>\n\n        <CardBody>\n          <Form>\n            <Row>\n              <Col md=\"8\" sm=\"12\" className=\"mb-1\">\n                <Label className=\"form-label\" for=\"nameMulti\">\n                  Location Name\n                </Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"location-name\"\n                  placeholder=\"Format: State - Area. e.g: Enugu - Agbani.\"\n                />\n              </Col>\n              <Col sm=\"12\">\n                <div className=\"d-flex\">\n                  <Button\n                    className=\"me-1\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Create\n                  </Button>\n                  <Button outline color=\"secondary\" type=\"reset\">\n                    Clear\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </Form>\n        </CardBody>\n      </Card>\n\n      <LocationsTable />\n    </Fragment>\n  );\n};\n\nexport default Locations;\n"],"sourceRoot":""}