{"version":3,"sources":["@core/components/input-password-toggle/index.js","pages/authentication/ResetPassword.js"],"names":["InputPasswordToggle","forwardRef","props","ref","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","rest","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","size","renderIcon","defaultProps","ResetPassword","to","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","tag","onSubmit","autoFocus","color","block"],"mappings":"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","file":"static/js/24.38cb5f59.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","// ** React Imports\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// ** Icons Imports\r\nimport { ChevronLeft } from \"react-feather\";\r\n\r\n// ** Custom Components\r\nimport InputPassword from \"@components/input-password-toggle\";\r\n\r\n// ** Reactstrap Imports\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardText,\r\n  Form,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\n\r\n// ** Styles\r\nimport \"@styles/react/pages/page-authentication.scss\";\r\n\r\nconst ResetPassword = () => {\r\n  return (\r\n    <div className=\"auth-wrapper auth-basic px-2\">\r\n      <div className=\"auth-inner my-2\">\r\n        <Card className=\"mb-0\">\r\n          <CardBody>\r\n            <Link\r\n              className=\"brand-logo\"\r\n              to=\"/\"\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <svg viewBox=\"0 0 139 95\" version=\"1.1\" height=\"28\">\r\n                <defs>\r\n                  <linearGradient\r\n                    x1=\"100%\"\r\n                    y1=\"10.5120544%\"\r\n                    x2=\"50%\"\r\n                    y2=\"89.4879456%\"\r\n                    id=\"linearGradient-1\"\r\n                  >\r\n                    <stop stopColor=\"#000000\" offset=\"0%\"></stop>\r\n                    <stop stopColor=\"#FFFFFF\" offset=\"100%\"></stop>\r\n                  </linearGradient>\r\n                  <linearGradient\r\n                    x1=\"64.0437835%\"\r\n                    y1=\"46.3276743%\"\r\n                    x2=\"37.373316%\"\r\n                    y2=\"100%\"\r\n                    id=\"linearGradient-2\"\r\n                  >\r\n                    <stop\r\n                      stopColor=\"#EEEEEE\"\r\n                      stopOpacity=\"0\"\r\n                      offset=\"0%\"\r\n                    ></stop>\r\n                    <stop stopColor=\"#FFFFFF\" offset=\"100%\"></stop>\r\n                  </linearGradient>\r\n                </defs>\r\n                <g\r\n                  id=\"Page-1\"\r\n                  stroke=\"none\"\r\n                  strokeWidth=\"1\"\r\n                  fill=\"none\"\r\n                  fillRule=\"evenodd\"\r\n                >\r\n                  <g\r\n                    id=\"Artboard\"\r\n                    transform=\"translate(-400.000000, -178.000000)\"\r\n                  >\r\n                    <g id=\"Group\" transform=\"translate(400.000000, 178.000000)\">\r\n                      <path\r\n                        d=\"M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z\"\r\n                        id=\"Path\"\r\n                        className=\"text-primary\"\r\n                        style={{ fill: \"currentColor\" }}\r\n                      ></path>\r\n                      <path\r\n                        d=\"M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z\"\r\n                        id=\"Path\"\r\n                        fill=\"url(#linearGradient-1)\"\r\n                        opacity=\"0.2\"\r\n                      ></path>\r\n                      <polygon\r\n                        id=\"Path-2\"\r\n                        fill=\"#000000\"\r\n                        opacity=\"0.049999997\"\r\n                        points=\"69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325\"\r\n                      ></polygon>\r\n                      <polygon\r\n                        id=\"Path-2\"\r\n                        fill=\"#000000\"\r\n                        opacity=\"0.099999994\"\r\n                        points=\"69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338\"\r\n                      ></polygon>\r\n                      <polygon\r\n                        id=\"Path-3\"\r\n                        fill=\"url(#linearGradient-2)\"\r\n                        opacity=\"0.099999994\"\r\n                        points=\"101.428699 0 83.0667527 94.1480575 130.378721 47.0740288\"\r\n                      ></polygon>\r\n                    </g>\r\n                  </g>\r\n                </g>\r\n              </svg>\r\n              <h2 className=\"brand-text text-primary ms-1\">Vuexy</h2>\r\n            </Link>\r\n            <CardTitle tag=\"h4\" className=\"mb-1\">\r\n              Reset Password 🔒\r\n            </CardTitle>\r\n            <CardText className=\"mb-2\">\r\n              Your new password must be different from previously used passwords\r\n            </CardText>\r\n            <Form\r\n              className=\"auth-reset-password-form mt-2\"\r\n              onSubmit={(e) => e.preventDefault()}\r\n            >\r\n              <div className=\"mb-1\">\r\n                <Label className=\"form-label\" for=\"new-password\">\r\n                  New Password\r\n                </Label>\r\n                <InputPassword\r\n                  className=\"input-group-merge\"\r\n                  id=\"new-password\"\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <Label className=\"form-label\" for=\"confirm-password\">\r\n                  Confirm Password\r\n                </Label>\r\n                <InputPassword\r\n                  className=\"input-group-merge\"\r\n                  id=\"confirm-password\"\r\n                />\r\n              </div>\r\n              <Button color=\"primary\" block>\r\n                Set New Password\r\n              </Button>\r\n            </Form>\r\n            <p className=\"text-center mt-2\">\r\n              <Link to=\"/pages/login-basic\">\r\n                <ChevronLeft className=\"rotate-rtl me-25\" size={14} />\r\n                <span className=\"align-middle\">Back to login</span>\r\n              </Link>\r\n            </p>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"sourceRoot":""}