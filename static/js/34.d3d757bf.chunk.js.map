{"version":3,"sources":["pages/orders/declined/columns.js","pages/orders/declined/index.js"],"names":["invoiceStatusObj","Sent","color","icon","Send","Paid","CheckCircle","Draft","Save","Downloaded","ArrowDownCircle","Info","PieChart","renderClient","row","Math","floor","random","avatar","length","className","img","width","height","content","client","name","initials","columns","sortable","sortField","minWidth","cell","to","id","size","invoiceStatus","Icon","Edit","placement","target","balance","dueDate","email","companyEmail","total","pill","tag","end","href","onClick","e","preventDefault","Link","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","lg","htmlFor","type","onChange","placeholder","InvoiceList","dispatch","useDispatch","store","useSelector","state","invoice","useState","setValue","sort","setSort","sortColumn","setSortColumn","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","useEffect","getData","q","page","perPage","status","data","noHeader","pagination","sortServer","paginationServer","subHeader","responsive","onSort","column","sortDirection","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","selected","handlePagination","forcePage","containerClassName","subHeaderComponent","val","parseInt"],"mappings":"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","file":"static/js/34.d3d757bf.chunk.js","sourcesContent":["// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\";\n\n// ** Store & Actions\n// import { store } from '@store/store'\n// import { deleteInvoice } from '../store'\n\n// ** Reactstrap Imports\nimport {\n  Badge,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledTooltip,\n  UncontrolledDropdown,\n} from \"reactstrap\";\n\n// ** Third Party Components\nimport {\n  Eye,\n  Send,\n  Edit,\n  Copy,\n  Save,\n  Info,\n  Trash,\n  PieChart,\n  Download,\n  TrendingUp,\n  CheckCircle,\n  MoreVertical,\n  ArrowDownCircle,\n} from \"react-feather\";\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: \"light-secondary\", icon: Send },\n  Paid: { color: \"light-success\", icon: CheckCircle },\n  Draft: { color: \"light-primary\", icon: Save },\n  Downloaded: { color: \"light-info\", icon: ArrowDownCircle },\n  \"Past Due\": { color: \"light-danger\", icon: Info },\n  \"Partial Payment\": { color: \"light-warning\", icon: PieChart },\n};\n\n// ** renders client column\nconst renderClient = (row) => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = [\n      \"light-success\",\n      \"light-danger\",\n      \"light-warning\",\n      \"light-info\",\n      \"light-primary\",\n      \"light-secondary\",\n    ],\n    color = states[stateNum];\n\n  if (row.avatar.length) {\n    return <Avatar className=\"me-50\" img={row.avatar} width=\"32\" height=\"32\" />;\n  } else {\n    return (\n      <Avatar\n        color={color}\n        className=\"me-50\"\n        content={row.client ? row.client.name : \"John Doe\"}\n        initials\n      />\n    );\n  }\n};\n\n// ** Table columns\nexport const columns = [\n  {\n    name: \"#\",\n    sortable: true,\n    sortField: \"id\",\n    minWidth: \"107px\",\n    // selector: row => row.id,\n    cell: (row) => (\n      <Link to={`/apps/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\n    ),\n  },\n  {\n    sortable: true,\n    minWidth: \"102px\",\n    sortField: \"invoiceStatus\",\n    name: <TrendingUp size={14} />,\n    // selector: row => row.invoiceStatus,\n    cell: (row) => {\n      const color = invoiceStatusObj[row.invoiceStatus]\n          ? invoiceStatusObj[row.invoiceStatus].color\n          : \"primary\",\n        Icon = invoiceStatusObj[row.invoiceStatus]\n          ? invoiceStatusObj[row.invoiceStatus].icon\n          : Edit;\n      return (\n        <Fragment>\n          <Avatar\n            color={color}\n            icon={<Icon size={14} />}\n            id={`av-tooltip-${row.id}`}\n          />\n          <UncontrolledTooltip placement=\"top\" target={`av-tooltip-${row.id}`}>\n            <span className=\"fw-bold\">{row.invoiceStatus}</span>\n            <br />\n            <span className=\"fw-bold\">Balance:</span> {row.balance}\n            <br />\n            <span className=\"fw-bold\">Due Date:</span> {row.dueDate}\n          </UncontrolledTooltip>\n        </Fragment>\n      );\n    },\n  },\n  {\n    name: \"Client\",\n    sortable: true,\n    minWidth: \"350px\",\n    sortField: \"client.name\",\n    // selector: row => row.client.name,\n    cell: (row) => {\n      const name = row.client ? row.client.name : \"John Doe\",\n        email = row.client ? row.client.companyEmail : \"johnDoe@email.com\";\n      return (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {renderClient(row)}\n          <div className=\"d-flex flex-column\">\n            <h6 className=\"user-name text-truncate mb-0\">{name}</h6>\n            <small className=\"text-truncate text-muted mb-0\">{email}</small>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    name: \"Total\",\n    sortable: true,\n    minWidth: \"150px\",\n    sortField: \"total\",\n    // selector: row => row.total,\n    cell: (row) => <span>${row.total || 0}</span>,\n  },\n  {\n    sortable: true,\n    minWidth: \"200px\",\n    name: \"Issued Date\",\n    sortField: \"dueDate\",\n    cell: (row) => row.dueDate,\n    // selector: row => row.dueDate\n  },\n  {\n    sortable: true,\n    name: \"Balance\",\n    minWidth: \"164px\",\n    sortField: \"balance\",\n    // selector: row => row.balance,\n    cell: (row) => {\n      return row.balance !== 0 ? (\n        <span>{row.balance}</span>\n      ) : (\n        <Badge color=\"light-success\" pill>\n          Paid\n        </Badge>\n      );\n    },\n  },\n  {\n    name: \"Action\",\n    minWidth: \"110px\",\n    cell: (row) => (\n      <div className=\"column-action d-flex align-items-center\">\n        <Send\n          className=\"cursor-pointer\"\n          size={17}\n          id={`send-tooltip-${row.id}`}\n        />\n        <UncontrolledTooltip placement=\"top\" target={`send-tooltip-${row.id}`}>\n          Send Mail\n        </UncontrolledTooltip>\n        <Link\n          to={`/apps/invoice/preview/${row.id}`}\n          id={`pw-tooltip-${row.id}`}\n        >\n          <Eye size={17} className=\"mx-1\" />\n        </Link>\n        <UncontrolledTooltip placement=\"top\" target={`pw-tooltip-${row.id}`}>\n          Preview Invoice\n        </UncontrolledTooltip>\n        <UncontrolledDropdown>\n          <DropdownToggle tag=\"span\">\n            <MoreVertical size={17} className=\"cursor-pointer\" />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Download size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Download</span>\n            </DropdownItem>\n            <DropdownItem\n              tag={Link}\n              to={`/apps/invoice/edit/${row.id}`}\n              className=\"w-100\"\n            >\n              <Edit size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => {\n                e.preventDefault();\n                // store.dispatch(deleteInvoice(row.id))\n              }}\n            >\n              <Trash size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Delete</span>\n            </DropdownItem>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Copy size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    ),\n  },\n];\n","// ** React Imports\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n// ** Table Columns\nimport { columns } from \"./columns\";\n\n// ** Third Party Components\nimport ReactPaginate from \"react-paginate\";\nimport { ChevronDown } from \"react-feather\";\nimport DataTable from \"react-data-table-component\";\n\n// ** Reactstrap Imports\nimport { Button, Input, Row, Col, Card } from \"reactstrap\";\n\n// ** Store & Actions\nimport { getData } from \"../orders-store\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// ** Styles\nimport \"@styles/react/apps/app-invoice.scss\";\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\n\nconst CustomHeader = ({\n  handleFilter,\n  value,\n  handleStatusValue,\n  statusValue,\n  handlePerPage,\n  rowsPerPage,\n}) => {\n  return (\n    <div className=\"invoice-list-table-header w-100 py-2\">\n      <Row>\n        <Col lg=\"6\" className=\"d-flex align-items-center px-0 px-lg-1\">\n          <div className=\"d-flex align-items-center me-2\">\n            <label htmlFor=\"rows-per-page\">Show</label>\n            <Input\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              className=\"form-control ms-50 pe-3\"\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n          </div>\n          <Button tag={Link} to=\"/apps/invoice/add\" color=\"primary\">\n            Add Record\n          </Button>\n        </Col>\n        <Col\n          lg=\"6\"\n          className=\"actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pe-lg-1 p-0\"\n        >\n          <div className=\"d-flex align-items-center\">\n            <label htmlFor=\"search-invoice\">Search</label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 me-2 w-100\"\n              type=\"text\"\n              value={value}\n              onChange={(e) => handleFilter(e.target.value)}\n              placeholder=\"Search Invoice\"\n            />\n          </div>\n          <Input\n            className=\"w-auto \"\n            type=\"select\"\n            value={statusValue}\n            onChange={handleStatusValue}\n          >\n            <option value=\"\">Select Status</option>\n            <option value=\"downloaded\">Downloaded</option>\n            <option value=\"draft\">Draft</option>\n            <option value=\"paid\">Paid</option>\n            <option value=\"partial payment\">Partial Payment</option>\n            <option value=\"past due\">Past Due</option>\n            <option value=\"sent\">Sent</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst InvoiceList = () => {\n  // ** Store vars\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state.invoice);\n\n  // ** States\n  const [value, setValue] = useState(\"\");\n  const [sort, setSort] = useState(\"desc\");\n  const [sortColumn, setSortColumn] = useState(\"id\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [statusValue, setStatusValue] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n      })\n    );\n  }, [dispatch, store.data.length]);\n\n  const handleFilter = (val) => {\n    setValue(val);\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n      })\n    );\n  };\n\n  const handlePerPage = (e) => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        status: statusValue,\n        perPage: parseInt(e.target.value),\n      })\n    );\n    setRowsPerPage(parseInt(e.target.value));\n  };\n\n  const handleStatusValue = (e) => {\n    setStatusValue(e.target.value);\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: e.target.value,\n      })\n    );\n  };\n\n  const handlePagination = (page) => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        status: statusValue,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n      })\n    );\n    setCurrentPage(page.selected + 1);\n  };\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0));\n\n    return (\n      <ReactPaginate\n        nextLabel=\"\"\n        breakLabel=\"...\"\n        previousLabel=\"\"\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        breakClassName=\"page-item\"\n        pageClassName={\"page-item\"}\n        breakLinkClassName=\"page-link\"\n        nextLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousLinkClassName={\"page-link\"}\n        previousClassName={\"page-item prev\"}\n        onPageChange={(page) => handlePagination(page)}\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        containerClassName={\"pagination react-paginate justify-content-end p-1\"}\n      />\n    );\n  };\n\n  const dataToRender = () => {\n    const filters = {\n      q: value,\n      status: statusValue,\n    };\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection);\n    setSortColumn(column.sortField);\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField,\n      })\n    );\n  };\n\n  return (\n    <div className=\"invoice-list-wrapper\">\n      <Card>\n        <div className=\"invoice-list-dataTable react-dataTable\">\n          <DataTable\n            noHeader\n            pagination\n            sortServer\n            paginationServer\n            subHeader={true}\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className=\"react-dataTable\"\n            defaultSortField=\"invoiceId\"\n            paginationDefaultPage={currentPage}\n            paginationComponent={CustomPagination}\n            subHeaderComponent={\n              <CustomHeader\n                value={value}\n                statusValue={statusValue}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                handleStatusValue={handleStatusValue}\n              />\n            }\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default InvoiceList;\n"],"sourceRoot":""}