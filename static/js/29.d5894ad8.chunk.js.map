{"version":3,"sources":["@core/components/widgets/stats/StatsHorizontal.js","pages/orders/columns.js","pages/orders/index.js"],"names":["StatsHorizontal","icon","color","stats","renderStats","statTitle","className","statsMargin","classnames","invoiceStatusObj","Sent","Send","Paid","CheckCircle","Draft","Save","Downloaded","ArrowDownCircle","Info","PieChart","renderClient","row","Math","floor","random","avatar","length","img","width","height","content","client","name","initials","columns","sortable","sortField","minWidth","cell","to","id","size","invoiceStatus","Icon","Edit","placement","target","balance","dueDate","email","companyEmail","total","pill","tag","end","href","onClick","e","preventDefault","Link","store","dispatch","deleteInvoice","CustomHeader","handleFilter","value","handleStatusValue","statusValue","handlePerPage","rowsPerPage","lg","htmlFor","type","onChange","placeholder","InvoiceList","useDispatch","useSelector","state","invoice","useState","setValue","sort","setSort","sortColumn","setSortColumn","currentPage","setCurrentPage","setStatusValue","setRowsPerPage","useEffect","getData","q","page","perPage","status","data","sm","md","for","isClearable","options","label","classNamePrefix","setCurrentRole","setCurrentPlan","number","setCurrentStatus","noHeader","pagination","sortServer","paginationServer","subHeader","responsive","onSort","column","sortDirection","filters","isFiltered","Object","keys","some","k","allData","slice","dataToRender","sortIcon","defaultSortField","paginationDefaultPage","paginationComponent","count","Number","toFixed","nextLabel","breakLabel","previousLabel","pageCount","activeClassName","breakClassName","pageClassName","breakLinkClassName","nextLinkClassName","pageLinkClassName","nextClassName","previousLinkClassName","previousClassName","onPageChange","selected","handlePagination","forcePage","containerClassName","subHeaderComponent","val","parseInt"],"mappings":"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","file":"static/js/29.d5894ad8.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className={className}>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n          <div>\r\n            {renderStats ? (\r\n              renderStats\r\n            ) : (\r\n              <h2\r\n                className={classnames('fw-bolder', {\r\n                  'mb-0': !statsMargin,\r\n                  [statsMargin]: statsMargin\r\n                })}\r\n              >\r\n                {stats}\r\n              </h2>\r\n            )}\r\n\r\n            <p className='card-text'>{statTitle}</p>\r\n          </div>\r\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\r\n            <div className='avatar-content'>{icon}</div>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsHorizontal\r\n\r\n// ** PropTypes\r\nStatsHorizontal.propTypes = {\r\n  stats: PropTypes.string,\r\n  renderStats: PropTypes.any,\r\n  className: PropTypes.string,\r\n  icon: PropTypes.element.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n  statTitle: PropTypes.string.isRequired,\r\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\r\n}\r\n","// ** React Imports\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// ** Custom Components\nimport Avatar from \"@components/avatar\";\n\n// ** Store & Actions\nimport { store } from \"@store/store\";\nimport { deleteInvoice } from \"./orders-store\";\n\n// ** Reactstrap Imports\nimport {\n  Badge,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledTooltip,\n  UncontrolledDropdown,\n} from \"reactstrap\";\n\n// ** Third Party Components\nimport {\n  Eye,\n  Send,\n  Edit,\n  Copy,\n  Save,\n  Info,\n  Trash,\n  PieChart,\n  Download,\n  TrendingUp,\n  CheckCircle,\n  MoreVertical,\n  ArrowDownCircle,\n} from \"react-feather\";\n\n// ** Vars\nconst invoiceStatusObj = {\n  Sent: { color: \"light-secondary\", icon: Send },\n  Paid: { color: \"light-success\", icon: CheckCircle },\n  Draft: { color: \"light-primary\", icon: Save },\n  Downloaded: { color: \"light-info\", icon: ArrowDownCircle },\n  \"Past Due\": { color: \"light-danger\", icon: Info },\n  \"Partial Payment\": { color: \"light-warning\", icon: PieChart },\n};\n\n// ** renders client column\nconst renderClient = (row) => {\n  const stateNum = Math.floor(Math.random() * 6),\n    states = [\n      \"light-success\",\n      \"light-danger\",\n      \"light-warning\",\n      \"light-info\",\n      \"light-primary\",\n      \"light-secondary\",\n    ],\n    color = states[stateNum];\n\n  if (row.avatar.length) {\n    return <Avatar className=\"me-50\" img={row.avatar} width=\"32\" height=\"32\" />;\n  } else {\n    return (\n      <Avatar\n        color={color}\n        className=\"me-50\"\n        content={row.client ? row.client.name : \"John Doe\"}\n        initials\n      />\n    );\n  }\n};\n\n// ** Table columns\nexport const columns = [\n  {\n    name: \"#\",\n    sortable: true,\n    sortField: \"id\",\n    minWidth: \"107px\",\n    // selector: row => row.id,\n    cell: (row) => (\n      <Link to={`/apps/invoice/preview/${row.id}`}>{`#${row.id}`}</Link>\n    ),\n  },\n  {\n    sortable: true,\n    minWidth: \"102px\",\n    sortField: \"invoiceStatus\",\n    name: <TrendingUp size={14} />,\n    // selector: row => row.invoiceStatus,\n    cell: (row) => {\n      const color = invoiceStatusObj[row.invoiceStatus]\n          ? invoiceStatusObj[row.invoiceStatus].color\n          : \"primary\",\n        Icon = invoiceStatusObj[row.invoiceStatus]\n          ? invoiceStatusObj[row.invoiceStatus].icon\n          : Edit;\n      return (\n        <Fragment>\n          <Avatar\n            color={color}\n            icon={<Icon size={14} />}\n            id={`av-tooltip-${row.id}`}\n          />\n          <UncontrolledTooltip placement=\"top\" target={`av-tooltip-${row.id}`}>\n            <span className=\"fw-bold\">{row.invoiceStatus}</span>\n            <br />\n            <span className=\"fw-bold\">Balance:</span> {row.balance}\n            <br />\n            <span className=\"fw-bold\">Due Date:</span> {row.dueDate}\n          </UncontrolledTooltip>\n        </Fragment>\n      );\n    },\n  },\n  {\n    name: \"Client\",\n    sortable: true,\n    minWidth: \"350px\",\n    sortField: \"client.name\",\n    // selector: row => row.client.name,\n    cell: (row) => {\n      const name = row.client ? row.client.name : \"John Doe\",\n        email = row.client ? row.client.companyEmail : \"johnDoe@email.com\";\n      return (\n        <div className=\"d-flex justify-content-left align-items-center\">\n          {renderClient(row)}\n          <div className=\"d-flex flex-column\">\n            <h6 className=\"user-name text-truncate mb-0\">{name}</h6>\n            <small className=\"text-truncate text-muted mb-0\">{email}</small>\n          </div>\n        </div>\n      );\n    },\n  },\n  {\n    name: \"Total\",\n    sortable: true,\n    minWidth: \"150px\",\n    sortField: \"total\",\n    // selector: row => row.total,\n    cell: (row) => <span>${row.total || 0}</span>,\n  },\n  {\n    sortable: true,\n    minWidth: \"200px\",\n    name: \"Issued Date\",\n    sortField: \"dueDate\",\n    cell: (row) => row.dueDate,\n    // selector: row => row.dueDate\n  },\n  {\n    sortable: true,\n    name: \"Balance\",\n    minWidth: \"164px\",\n    sortField: \"balance\",\n    // selector: row => row.balance,\n    cell: (row) => {\n      return row.balance !== 0 ? (\n        <span>{row.balance}</span>\n      ) : (\n        <Badge color=\"light-success\" pill>\n          Paid\n        </Badge>\n      );\n    },\n  },\n  {\n    name: \"Action\",\n    minWidth: \"110px\",\n    cell: (row) => (\n      <div className=\"column-action d-flex align-items-center\">\n        <Send\n          className=\"cursor-pointer\"\n          size={17}\n          id={`send-tooltip-${row.id}`}\n        />\n        <UncontrolledTooltip placement=\"top\" target={`send-tooltip-${row.id}`}>\n          Send Mail\n        </UncontrolledTooltip>\n        <Link\n          to={`/apps/invoice/preview/${row.id}`}\n          id={`pw-tooltip-${row.id}`}\n        >\n          <Eye size={17} className=\"mx-1\" />\n        </Link>\n        <UncontrolledTooltip placement=\"top\" target={`pw-tooltip-${row.id}`}>\n          Preview Invoice\n        </UncontrolledTooltip>\n        <UncontrolledDropdown>\n          <DropdownToggle tag=\"span\">\n            <MoreVertical size={17} className=\"cursor-pointer\" />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Download size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Download</span>\n            </DropdownItem>\n            <DropdownItem\n              tag={Link}\n              to={`/apps/invoice/edit/${row.id}`}\n              className=\"w-100\"\n            >\n              <Edit size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Edit</span>\n            </DropdownItem>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => {\n                e.preventDefault();\n                store.dispatch(deleteInvoice(row.id));\n              }}\n            >\n              <Trash size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Delete</span>\n            </DropdownItem>\n            <DropdownItem\n              tag=\"a\"\n              href=\"/\"\n              className=\"w-100\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Copy size={14} className=\"me-50\" />\n              <span className=\"align-middle\">Duplicate</span>\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </div>\n    ),\n  },\n];\n","// ** React Imports\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n// ** Table Columns\nimport { columns } from \"./columns\";\n\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\";\n\n// ** Third Party Components\nimport ReactPaginate from \"react-paginate\";\nimport { ChevronDown, User, UserCheck, UserPlus, UserX } from \"react-feather\";\nimport DataTable from \"react-data-table-component\";\n\n// ** Reactstrap Imports\nimport {\n  Button,\n  Input,\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardTitle,\n  CardBody,\n  Label,\n} from \"reactstrap\";\nimport Select from \"react-select\";\n\n// ** Store & Actions\nimport { getData } from \"./orders-store\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// ** Styles\nimport \"@styles/react/apps/app-invoice.scss\";\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\";\n\nconst CustomHeader = ({\n  handleFilter,\n  value,\n  handleStatusValue,\n  statusValue,\n  handlePerPage,\n  rowsPerPage,\n}) => {\n  return (\n    <div className=\"invoice-list-table-header w-100 py-2\">\n      <Row>\n        <Col lg=\"6\" className=\"d-flex align-items-center px-0 px-lg-1\">\n          <div className=\"d-flex align-items-center me-2\">\n            <label htmlFor=\"rows-per-page\">Show</label>\n            <Input\n              type=\"select\"\n              id=\"rows-per-page\"\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              className=\"form-control ms-50 pe-3\"\n            >\n              <option value=\"10\">10</option>\n              <option value=\"25\">25</option>\n              <option value=\"50\">50</option>\n            </Input>\n          </div>\n          <Button tag={Link} to=\"/apps/invoice/add\" color=\"primary\">\n            Add Record\n          </Button>\n        </Col>\n        <Col\n          lg=\"6\"\n          className=\"actions-right d-flex align-items-center justify-content-lg-end flex-lg-nowrap flex-wrap mt-lg-0 mt-1 pe-lg-1 p-0\"\n        >\n          <div className=\"d-flex align-items-center\">\n            <label htmlFor=\"search-invoice\">Search</label>\n            <Input\n              id=\"search-invoice\"\n              className=\"ms-50 me-2 w-100\"\n              type=\"text\"\n              value={value}\n              onChange={(e) => handleFilter(e.target.value)}\n              placeholder=\"Search Invoice\"\n            />\n          </div>\n          <Input\n            className=\"w-auto \"\n            type=\"select\"\n            value={statusValue}\n            onChange={handleStatusValue}\n          >\n            <option value=\"\">Select Status</option>\n            <option value=\"downloaded\">Downloaded</option>\n            <option value=\"draft\">Draft</option>\n            <option value=\"paid\">Paid</option>\n            <option value=\"partial payment\">Partial Payment</option>\n            <option value=\"past due\">Past Due</option>\n            <option value=\"sent\">Sent</option>\n          </Input>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nconst InvoiceList = () => {\n  // ** Store vars\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state.invoice);\n\n  // ** States\n  const [value, setValue] = useState(\"\");\n  const [sort, setSort] = useState(\"desc\");\n  const [sortColumn, setSortColumn] = useState(\"id\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [statusValue, setStatusValue] = useState(\"\");\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  useEffect(() => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n      })\n    );\n  }, [dispatch, store.data.length]);\n\n  const handleFilter = (val) => {\n    setValue(val);\n    dispatch(\n      getData({\n        sort,\n        q: val,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: statusValue,\n      })\n    );\n  };\n\n  const handlePerPage = (e) => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        status: statusValue,\n        perPage: parseInt(e.target.value),\n      })\n    );\n    setRowsPerPage(parseInt(e.target.value));\n  };\n\n  const handleStatusValue = (e) => {\n    setStatusValue(e.target.value);\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        page: currentPage,\n        perPage: rowsPerPage,\n        status: e.target.value,\n      })\n    );\n  };\n\n  const handlePagination = (page) => {\n    dispatch(\n      getData({\n        sort,\n        q: value,\n        sortColumn,\n        status: statusValue,\n        perPage: rowsPerPage,\n        page: page.selected + 1,\n      })\n    );\n    setCurrentPage(page.selected + 1);\n  };\n\n  const CustomPagination = () => {\n    const count = Number((store.total / rowsPerPage).toFixed(0));\n\n    return (\n      <ReactPaginate\n        nextLabel=\"\"\n        breakLabel=\"...\"\n        previousLabel=\"\"\n        pageCount={count || 1}\n        activeClassName=\"active\"\n        breakClassName=\"page-item\"\n        pageClassName={\"page-item\"}\n        breakLinkClassName=\"page-link\"\n        nextLinkClassName={\"page-link\"}\n        pageLinkClassName={\"page-link\"}\n        nextClassName={\"page-item next\"}\n        previousLinkClassName={\"page-link\"}\n        previousClassName={\"page-item prev\"}\n        onPageChange={(page) => handlePagination(page)}\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        containerClassName={\"pagination react-paginate justify-content-end p-1\"}\n      />\n    );\n  };\n\n  const dataToRender = () => {\n    const filters = {\n      q: value,\n      status: statusValue,\n    };\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0;\n    });\n\n    if (store.data.length > 0) {\n      return store.data;\n    } else if (store.data.length === 0 && isFiltered) {\n      return [];\n    } else {\n      return store.allData.slice(0, rowsPerPage);\n    }\n  };\n  // ** User filter options\n  const roleOptions = [\n    { value: \"\", label: \"Select Role\" },\n    { value: \"admin\", label: \"Admin\" },\n    { value: \"author\", label: \"Author\" },\n    { value: \"editor\", label: \"Editor\" },\n    { value: \"maintainer\", label: \"Maintainer\" },\n    { value: \"subscriber\", label: \"Subscriber\" },\n  ];\n\n  const planOptions = [\n    { value: \"\", label: \"Select Plan\" },\n    { value: \"basic\", label: \"Basic\" },\n    { value: \"company\", label: \"Company\" },\n    { value: \"enterprise\", label: \"Enterprise\" },\n    { value: \"team\", label: \"Team\" },\n  ];\n\n  const statusOptions = [\n    { value: \"\", label: \"Select Status\", number: 0 },\n    { value: \"pending\", label: \"Pending\", number: 1 },\n    { value: \"active\", label: \"Active\", number: 2 },\n    { value: \"inactive\", label: \"Inactive\", number: 3 },\n  ];\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection);\n    setSortColumn(column.sortField);\n    dispatch(\n      getData({\n        q: value,\n        page: currentPage,\n        sort: sortDirection,\n        status: statusValue,\n        perPage: rowsPerPage,\n        sortColumn: column.sortField,\n      })\n    );\n  };\n\n  return (\n    <div className=\"invoice-list-wrapper\">\n      <Row>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"primary\"\n            statTitle=\"Total Orders\"\n            icon={<User size={20} />}\n            renderStats={<h3 className=\"fw-bolder mb-75\">21,459</h3>}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"primary\"\n            statTitle=\"Completed Orders\"\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className=\"fw-bolder mb-75\">4,567</h3>}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"warning\"\n            statTitle=\"Pending Orders\"\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className=\"fw-bolder mb-75\">19,860</h3>}\n          />\n        </Col>\n        <Col lg=\"3\" sm=\"6\">\n          <StatsHorizontal\n            color=\"danger\"\n            statTitle=\"Declined Orders\"\n            icon={<UserX size={20} />}\n            renderStats={<h3 className=\"fw-bolder mb-75\">237</h3>}\n          />\n        </Col>\n      </Row>\n\n      <Card>\n        <CardHeader>\n          <CardTitle tag=\"h4\">Filters</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md=\"4\">\n              <Label for=\"role-select\">Role</Label>\n              <Select\n                isClearable={false}\n                // value={currentRole}\n                options={roleOptions}\n                className=\"react-select\"\n                classNamePrefix=\"select\"\n                // theme={selectThemeColors}\n                onChange={(data) => {\n                  setCurrentRole(data);\n                  dispatch();\n                  // getData({\n                  //   sort,\n                  //   sortColumn,\n                  //   q: searchTerm,\n                  //   role: data.value,\n                  //   page: currentPage,\n                  //   perPage: rowsPerPage,\n                  //   status: currentStatus.value,\n                  //   currentPlan: currentPlan.value,\n                  // })\n                }}\n              />\n            </Col>\n            <Col className=\"my-md-0 my-1\" md=\"4\">\n              <Label for=\"plan-select\">Plan</Label>\n              <Select\n                // theme={selectThemeColors}\n                isClearable={false}\n                className=\"react-select\"\n                classNamePrefix=\"select\"\n                options={planOptions}\n                // value={currentPlan}\n                onChange={(data) => {\n                  setCurrentPlan(data);\n                  // dispatch(\n                  //   getData({\n                  //     sort,\n                  //     sortColumn,\n                  //     q: searchTerm,\n                  //     page: currentPage,\n                  //     perPage: rowsPerPage,\n                  //     role: currentRole.value,\n                  //     currentPlan: data.value,\n                  //     status: currentStatus.value,\n                  //   })\n                  // );\n                }}\n              />\n            </Col>\n            <Col md=\"4\">\n              <Label for=\"status-select\">Status</Label>\n              <Select\n                // theme={selectThemeColors}\n                isClearable={false}\n                className=\"react-select\"\n                classNamePrefix=\"select\"\n                options={statusOptions}\n                // value={currentStatus}\n                onChange={(data) => {\n                  setCurrentStatus(data);\n                  // dispatch(\n                  //   getData({\n                  //     sort,\n                  //     sortColumn,\n                  //     q: searchTerm,\n                  //     page: currentPage,\n                  //     status: data.value,\n                  //     perPage: rowsPerPage,\n                  //     role: currentRole.value,\n                  //     currentPlan: currentPlan.value,\n                  //   })\n                  // );\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card>\n        <div className=\"invoice-list-dataTable react-dataTable\">\n          <DataTable\n            noHeader\n            pagination\n            sortServer\n            paginationServer\n            subHeader={true}\n            columns={columns}\n            responsive={true}\n            onSort={handleSort}\n            data={dataToRender()}\n            sortIcon={<ChevronDown />}\n            className=\"react-dataTable\"\n            defaultSortField=\"invoiceId\"\n            paginationDefaultPage={currentPage}\n            paginationComponent={CustomPagination}\n            subHeaderComponent={\n              <CustomHeader\n                value={value}\n                statusValue={statusValue}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                handleStatusValue={handleStatusValue}\n              />\n            }\n          />\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default InvoiceList;\n"],"sourceRoot":""}